(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{212:function(t,e,n){"use strict";n.r(e);var s=n(0),i=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("公司老项目需要用 node0.1 版本来维护，进行中的项目用 v8，但我又想尝试最新的 v10,我在想有没有切户 node 版本的工作呢？")]),t._v(" "),t._m(2),t._v(" "),n("p",[t._v("问了身边的人都是用新不用旧的，我在 google 上找了很多解决方法，用 python 或者用 C++写的一些软件来弄的，其中最流行的是一个 nvm 的包，原作者只用 shell 只写了一个 mac 版本，开源社区用 Go 弄了个 windows 版本实现方法不一样，但是不影响使用。")]),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("我本人用的是 windows 版本，下面只说 windows 的使用方法（与 mac 版本大同小异）")]),t._v(" "),t._m(4),t._v(" "),n("ol",[n("li",[n("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载 nvm-windows"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("重新打开命令行工具")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8)]),t._v(" "),t._m(9),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("ol",[n("li",[t._v("建议保留 3 个版本，node 的兼容跨度不会大于 3 个版本")]),t._v(" "),t._m(10),t._v(" "),n("li",[t._v("如果需要查看项目兼容什么版本则建议用自动化测试工具，nvm 只适合在开发中使用。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows/issues/133",target:"_blank",rel:"noopener noreferrer"}},[t._v("防毒软件报毒的相关解决方法"),n("OutboundLink")],1)])])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"切换-node-版本的工具——nvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换-node-版本的工具——nvm","aria-hidden":"true"}},[this._v("#")]),this._v(" 切换 node 版本的工具——nvm")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"需求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需求","aria-hidden":"true"}},[this._v("#")]),this._v(" 需求")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("注意")]),this._v(" "),e("p",[this._v('在安装 nvm for windows 之前，你需要卸载任何现有版本的 node.js。并且需要删除现有的 nodejs 安装目录（例如："C:\\Program Files\\nodejs’）。因为，nvm 生成的 symlink（符号链接/超链接)不会覆盖现有的（甚至是空的）安装目录。\n你还需要删除现有的 npm 安装位置（例如“C:\\Users\\weiqinl\\AppData\\Roaming\\npm”），以便正确使用 nvm 安装位置。')])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("nvm install 10.13.0")]),this._v(" 下载 10.13.0 版本的 node")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("nvm use 10.13.0")]),this._v(" 使用 10.13.0 版本的 node")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("code",[this._v("node -v")]),this._v(" 如果 node 版本显示 10.13.0 就表示可以使用了")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("你还可以"),e("code",[this._v("nvm install")]),this._v("其他版本用"),e("code",[this._v("nvm ls")]),this._v("查看当前下载了哪些版本")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("nvm ls\t#查看已下载的版本列表\nnvm use  <versionNumber> #使用版本\nnvm install <versionNumber> #下载\nnvm uninstall <versionNumber> #删除\nnvm node_mirror <node_mirror_url>：#设置节点镜像,可以使用https://npm.taobao.org/mirrors/node/\nnvm list [available] #列出node.js安装。available在末尾键入以显示可供下载的版本列表。\nnvm on #启用node.js版本管理。\nnvm off #禁用node.js版本管理（不卸载任何内容）。\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("不同版本中下载的全局插件都不会共享，也就是说"),e("code",[this._v("npm i vue -g")]),this._v("全局下载了vue只要使用"),e("code",[this._v("nvm use 10.13.0")]),this._v("换个版本 ,在这个版本的全局环境中没有安装vue的话则需要重新下载，可以使用"),e("code",[this._v("npm root -g")]),this._v("查看全局环境的安装目录。")])}],!1,null,null,null);e.default=i.exports}}]);